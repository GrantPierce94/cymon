# Cymon - A Turn-Based Creature Adventure Game (Full-Stack Java)

Cymon is a full-stack, Pokémon-inspired adventure game that combines turn-based combat, creature capture, and persistent progression. Built using Android (Java) and Spring Boot (Java), this project simulates a secure, interactive game environment where users can explore, battle, and manage their custom team of Cymons.

The project was developed by a collaborative team following Agile methodology and includes authentication, secure backend integration, and real-time communication via WebSockets.

## Security Considerations

- Authentication and Session Management  
  Secure login system with password hashing and persistent sessions to prevent unauthorized access.

- Role-Based Authorization  
  Server-side logic ensures players can only access and modify data tied to their user account.

- Input Validation  
  API endpoints are hardened with validation checks to protect against injection and malformed requests.

- Transport Layer Consideration  
  Designed with HTTPS and secure WebSocket protocols in mind to protect sensitive gameplay and user data.

## Features

- User Account System  
  Players register and log in to maintain their Cymon collection and game progress.

- Creature Capture and Evolution  
  Discover and collect Cymons, each with unique abilities and potential evolutions.

- Turn-Based Combat  
  Strategy-based battles with type matchups, move sets, and real-time interactions.

- Exploration System  
  Navigate a multi-zone environment and encounter dynamic in-game events.

- Custom Team Building  
  Players manage their roster of Cymons for optimized combat and quest progression.

## Architecture Overview

Frontend  
- Platform: Android (Java, Android Studio)  
- UI: Navigation between login, map, and battle views  
- Features: Responsive layouts, real-time updates via WebSocket

Backend  
- Language: Java (Spring Boot)  
- Database: MySQL  
- API: RESTful endpoints for account, battle, and capture logic  
- Real-Time: WebSocket support for live battles  
- Security: Authentication, user scoping, and secure data handling

## Setup Instructions

### Android Client

1. Clone the repository:
   ```bash
   git clone https://github.com/GrantPierce94/cymon.git
Open the frontend folder in Android Studio.

Sync Gradle and run the app using an emulator or physical device.

Backend Server
Install Java 11+ and MySQL.

Configure your MySQL instance using provided schema in /backend/sql/.

Navigate to /backend and run:

./gradlew build
java -jar build/libs/cymon-server.jar

Project Structure
├── frontend/              # Android client codebase
│   ├── activities/        # Login, Battle, Map, Team UI
│   ├── models/            # Cymon, Move, Battle logic classes
│   └── utils/             # Game state and session management
│
├── backend/               # Spring Boot API server
│   ├── controllers/       # REST endpoints
│   ├── services/          # Game logic and battle resolution
│   ├── repository/        # MySQL integration
│   └── websocket/         # Real-time communication layer
│
├── sql/                   # DB setup scripts and schema
└── README.md              # Project overview

Testing Approach
Unit tests for battle logic, database persistence, and user management

Integration tests for backend REST APIs

Manual testing across Android devices and emulators

Tools and Technologies
Frontend: Android SDK, Java, XML Layouts

Backend: Spring Boot, Java, REST APIs, WebSockets

Database: MySQL

Version Control and CI: Git, GitHub, GitHub Actions

Agile Workflow: Trello, Sprints, Code Reviews

## Contributors

- **Grant Pierce** (@GrantPierce94) – Full-stack Developer  
  Led front-end Android development and designed five gameplay screens.  
  Implemented core game mechanics (capture, battles, turn logic) and user authentication flow.  
  Contributed to backend integration and security-focused features.

- **Danny** – Backend Developer  
  Developed Spring Boot RESTful API endpoints and managed MySQL schema.  
  Focused on server-side game logic, user data persistence, and battle state storage.

- **Jack** – Frontend Support  
  Assisted with UI styling, navigation flow, and interaction design across Android activities.


License
This project is licensed under the MIT License. See the LICENSE file for more details.
